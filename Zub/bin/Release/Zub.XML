<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zub</name>
    </assembly>
    <members>
        <member name="T:vit.Zub.ZubInstaller">
            <SUMMARY>
            Установщик (installer) для сервиса Zub
            </SUMMARY> 
        </member>
        <member name="F:vit.Zub.ZubInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:vit.Zub.ZubInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:vit.Zub.ZubInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:vit.Zub.ZubInstaller.#ctor">
            <SUMMARY>
            Класс установщика
            </SUMMARY> 
        </member>
        <member name="T:vit.Zub.NezabudkaStruct">
            <summary>
            структура с данными подключения к SQL серверу Незабудки
            </summary>
        </member>
        <member name="M:vit.Zub.NezabudkaStruct.#ctor(System.String,System.String,System.Boolean,System.String,System.String,System.Int32)">
            <summary>
            конструктор
            </summary>
            <param name="server">SQL сервер</param>
            <param name="database">база данных</param>
            <param name="winNTauth">windows аутентификация</param>
            <param name="login">логин</param>
            <param name="password">пароль</param>
            <param name="timeOut">время ожидания (сек)</param>
        </member>
        <member name="M:vit.Zub.NezabudkaStruct.ToString">
            <summary>
            строка подключения ксерверу SQL незабудки
            </summary>
            <returns>строка подключения</returns>
        </member>
        <member name="M:vit.Zub.NezabudkaStruct.GetSettings(System.String)">
            <summary>
            чтение настроек
            </summary>
            <param name="prefix">префикс настроек</param>
        </member>
        <member name="T:vit.Zub.Nezabudka">
            <summary>
            Класс для работы с компелксом Незабудка
            </summary>
        </member>
        <member name="M:vit.Zub.Nezabudka.#ctor(vit.Zub.NezabudkaStruct,vit.Zub.NezabudkaStruct)">
            <summary>
            конструктор
            </summary>
            <param name="p1">параметры первого сервера незабудки</param>
            <param name="p2">параметры второго сервера незабудки</param>
        </member>
        <member name="M:vit.Zub.Nezabudka.OpenConnect">
            <summary>
            открывается соединение с серверами незабудки
            </summary>
            <returns>true если хотя бы одно соединение есть</returns>
        </member>
        <member name="M:vit.Zub.Nezabudka.CurrentConnection">
            <summary>
            определение текущего сервера Незабудки
            </summary>
            <returns>соединение с сервером незабудки</returns>
        </member>
        <member name="M:vit.Zub.Nezabudka.InitLastDate">
            <summary>
            Определение последней записи, с неё и начинаем работать
            </summary>
        </member>
        <member name="M:vit.Zub.Nezabudka.GetDataToReader">
            <summary>
            Получаем новые записи
            </summary>
            <returns>возвращаем ридер с данными</returns>
        </member>
        <member name="T:vit.Zub.WriteLogDelegate">
            <summary>
            делегат для вывода сообщений в журнал событий
            </summary>
            <param name="log">строка сообщения</param>
        </member>
        <member name="T:vit.Zub.Zub">
            <summary>
            Основной класс сервиса
            </summary>
            <summary>
            Основной класс (дизайнера) сервиса
            </summary>
        </member>
        <member name="M:vit.Zub.Zub.#ctor">
            <summary>
            конструкор основного класса сервиса
            </summary>
        </member>
        <member name="M:vit.Zub.Zub.GetSettings">
            <summary>
            чтение настроек
            </summary>
        </member>
        <member name="M:vit.Zub.Zub.OnStart(System.String[])">
            <summary>
            Старт сервиса
            </summary>
        </member>
        <member name="M:vit.Zub.Zub.OnStop">
            <summary>
            Стоп сервиса
            </summary>
        </member>
        <member name="M:vit.Zub.Zub.ServiceMain">
            <summary> 
            Основной беЗконечнный цикл сервиса 
            </summary>
        </member>
        <member name="M:vit.Zub.Zub.Execute">
            <summary>
            тело потока сервиса (основная функция)
            </summary>
            <RETURNS></RETURNS>
        </member>
        <member name="M:vit.Zub.Zub.ChannelToName(System.Int32)">
            <summary>
            определение диспетчера по каналу
            </summary>
            <param name="channel">номер канала</param>
            <returns>имя диспетчера</returns>
        </member>
        <member name="M:vit.Zub.Zub.TypeToStr(System.Diagnostics.EventLogEntryType)">
            <summary>
            преобразование типа лога в журнале сообщений в короткую строку
            </summary>
            <param name="type">тип сообщения в журнале сообщений</param>
            <returns>короткая строка</returns>
        </member>
        <member name="M:vit.Zub.Zub.WriteLog(System.String)">
            <summary>
            вывод в журнал сообщений (Event Viewer)
            </summary>
            <param name="log">Строка с сообщением</param>
        </member>
        <member name="M:vit.Zub.Zub.WriteFile(System.String,System.String)">
            <summary>
            вывод в файл, если требуется
            </summary>
            <param name="log">строка с сообщением</param>
            <param name="param">параметр</param>
        </member>
        <member name="M:vit.Zub.Program.Main">
            <summary>
            Точка входа в прогамму
            </summary>
        </member>
    </members>
</doc>
